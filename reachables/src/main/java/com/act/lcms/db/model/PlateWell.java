package com.act.lcms.db.model;

import com.act.lcms.db.DB;
import org.apache.commons.lang3.StringUtils;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

public abstract class PlateWell<T extends PlateWell> extends BaseDBModel<T> {
  protected String makeGetByPlateIDQuery() {
    return StringUtils.join(new String[] {
        "SELECT", StringUtils.join(this.getAllFields(), ','),
        "from", this.getTableName(),
        "where plate_id = ?",
        "order by plate_row asc, plate_column asc"
    }, " ");
  }
  protected abstract String getGetByPlateIDQuery();
  public List<T> getByPlateId(DB db, Integer plateId) throws SQLException {
    try (PreparedStatement stmt = db.getConn().prepareStatement(getGetByPlateIDQuery())) {
      stmt.setInt(1, plateId);
      try (ResultSet resultSet = stmt.executeQuery()) {
        return fromResultSet(resultSet);
      }
    }
  }

  protected T insert(DB db, T toInsert) throws SQLException {
    return insert(db, toInsert,
        String.format("could not retrieve autogenerated key for well at %d @ %d x %d",
            plateId, plateRow, plateColumn)
    );
  }

  /* Use protected rather than private, as this class represents common attributes of all plate wells.  Extending
   * classes can/should have access to its fields, as its existence is simply an organizational convenience. */
  protected Integer plateId;
  protected Integer plateRow;
  protected Integer plateColumn;

  public Integer getPlateId() {
    return plateId;
  }

  public void setPlateId(Integer plateId) {
    this.plateId = plateId;
  }

  public Integer getPlateRow() {
    return plateRow;
  }

  public void setPlateRow(Integer plateRow) {
    this.plateRow = plateRow;
  }

  public Integer getPlateColumn() {
    return plateColumn;
  }

  public void setPlateColumn(Integer plateColumn) {
    this.plateColumn = plateColumn;
  }

  public String getCoordinatesString() {
    if (plateRow == null || plateColumn == null) {
      return "(unknown)";
    }
    return String.format("%s%d",
        Character.valueOf((char) (this.getPlateRow() + 'A')).toString(), this.getPlateColumn() + 1);
  }
}
